service: my-express-application

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'characters-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
       - { "Fn::GetAtt":["CharactersDynamoDBTable", "Arn"]}
  environment:
    CHARACTERS_TABLE: ${self:custom.tableName}

functions:
  landing:
    handler: index.handler
    events:
      - http: 'GET /'
  getCharacters:
    handler: index.handler
    events:
      - http: 'GET /characters'
  getCharacter:
    handler: index.handler
    events:
      - http: 'GET /characters/{proxy+}'
  createCharacter:
    handler: index.handler
    events:
      - http: 'POST /characters'

resources:
  Resources:
    CharactersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: characterId
          AttributeType: S
        KeySchema:
         -
          AttributeName: characterId
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}